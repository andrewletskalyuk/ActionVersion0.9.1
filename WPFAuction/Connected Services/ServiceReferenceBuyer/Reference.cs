//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFAuction.ServiceReferenceBuyer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceBuyer.IForBuyer")]
    public interface IForBuyer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForBuyer/GetAllProduct", ReplyAction="http://tempuri.org/IForBuyer/GetAllProductResponse")]
        AuctionBLLService.DTOClasses.ServerLotDTO[] GetAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForBuyer/GetAllProduct", ReplyAction="http://tempuri.org/IForBuyer/GetAllProductResponse")]
        System.Threading.Tasks.Task<AuctionBLLService.DTOClasses.ServerLotDTO[]> GetAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForBuyer/ConnectionForBuyer", ReplyAction="http://tempuri.org/IForBuyer/ConnectionForBuyerResponse")]
        bool ConnectionForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForBuyer/ConnectionForBuyer", ReplyAction="http://tempuri.org/IForBuyer/ConnectionForBuyerResponse")]
        System.Threading.Tasks.Task<bool> ConnectionForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/MakeBet")]
        void MakeBet(AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO, AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, decimal newPrice);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/MakeBet")]
        System.Threading.Tasks.Task MakeBetAsync(AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO, AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, decimal newPrice);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/DisconectionForBuyer")]
        void DisconectionForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/DisconectionForBuyer")]
        System.Threading.Tasks.Task DisconectionForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/BoughtLot")]
        void BoughtLot(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/BoughtLot")]
        System.Threading.Tasks.Task BoughtLotAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/AddCashForBuyer")]
        void AddCashForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForBuyer/AddCashForBuyer")]
        System.Threading.Tasks.Task AddCashForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForBuyerChannel : WPFAuction.ServiceReferenceBuyer.IForBuyer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForBuyerClient : System.ServiceModel.ClientBase<WPFAuction.ServiceReferenceBuyer.IForBuyer>, WPFAuction.ServiceReferenceBuyer.IForBuyer {
        
        public ForBuyerClient() {
        }
        
        public ForBuyerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ForBuyerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForBuyerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForBuyerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AuctionBLLService.DTOClasses.ServerLotDTO[] GetAllProduct() {
            return base.Channel.GetAllProduct();
        }
        
        public System.Threading.Tasks.Task<AuctionBLLService.DTOClasses.ServerLotDTO[]> GetAllProductAsync() {
            return base.Channel.GetAllProductAsync();
        }
        
        public bool ConnectionForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            return base.Channel.ConnectionForBuyer(serverBuyerDTO);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectionForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            return base.Channel.ConnectionForBuyerAsync(serverBuyerDTO);
        }
        
        public void MakeBet(AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO, AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, decimal newPrice) {
            base.Channel.MakeBet(serverLotDTO, serverBuyerDTO, newPrice);
        }
        
        public System.Threading.Tasks.Task MakeBetAsync(AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO, AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, decimal newPrice) {
            return base.Channel.MakeBetAsync(serverLotDTO, serverBuyerDTO, newPrice);
        }
        
        public void DisconectionForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            base.Channel.DisconectionForBuyer(serverBuyerDTO);
        }
        
        public System.Threading.Tasks.Task DisconectionForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            return base.Channel.DisconectionForBuyerAsync(serverBuyerDTO);
        }
        
        public void BoughtLot(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO) {
            base.Channel.BoughtLot(serverBuyerDTO, serverLotDTO);
        }
        
        public System.Threading.Tasks.Task BoughtLotAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO, AuctionBLLService.DTOClasses.ServerLotDTO serverLotDTO) {
            return base.Channel.BoughtLotAsync(serverBuyerDTO, serverLotDTO);
        }
        
        public void AddCashForBuyer(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            base.Channel.AddCashForBuyer(serverBuyerDTO);
        }
        
        public System.Threading.Tasks.Task AddCashForBuyerAsync(AuctionBLLService.DTOClasses.ServerBuyerDTO serverBuyerDTO) {
            return base.Channel.AddCashForBuyerAsync(serverBuyerDTO);
        }
    }
}
